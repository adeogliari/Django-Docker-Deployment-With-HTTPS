version: '3.9'

services:
  app:
    build:
      context: ./docker/django
    command: >
      sh -c " set -e && 

              until nc -z ${DB_HOST} ${DB_PORT}; do
                  echo 'Aguardando Banco de Dados...'
                  sleep 2s
              done &&
              echo 'Banco de Dados Pronto!' &&

              ls -la /vol/ &&
              ls -la /vol/web &&

              whoami

              python manage.py collectstatic --noinput &&
              python manage.py migrate &&
              
              uwsgi --socket :9000 --workers 4 --master --enable-threads --module app.wsgi"
    restart: always
    depends_on: 
      - db
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_CSRF_TRUSTED_ORIGINS=${DOMAIN}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
    volumes:
      - static-data:/vol/web
    networks:
      - django_net

  certbot:
    build:
      context: ./docker/certbot
    command: echo "Saindo..."
    depends_on:
      - nginx
    environment:
      - EMAIL=${ACME_DEFAULT_EMAIL}
      - DOMAIN=${DOMAIN}
    volumes:
      - certbot-web:/vol/www
      - certbot-certs:/etc/letsencrypt/
    networks:
      - django_net

  nginx:
    build:
      context: ./docker/nginx
    restart: always
    depends_on:
      - app
    environment:
      - DOMAIN=${DOMAIN}
      - APP_HOST=app
      - APP_PORT=9000
    volumes:
      - static-data:/vol/static
      - certbot-web:/vol/www
      - proxy-dhparams:/vol/proxy
      - certbot-certs:/etc/letsencrypt
    ports:
      - 80:80
      - 443:443
    networks:
      - django_net

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - django_net
  
networks:
  django_net:
    driver: bridge

volumes:
  static-data:
  postgres-data:
  certbot-web:
  proxy-dhparams:
  certbot-certs: